{"version":3,"sources":["reportWebVitals.js","util/route_util.js","actions/album_actions.ts","util/album_util.ts","util/session_api_util.ts","actions/session_actions.ts","components/session/login_form.jsx","components/session/login_form_container.js","components/session/signup_form_container.js","components/profile/profile_container.js","components/profile/profile.jsx","components/nav/navbar.jsx","components/nav/navbar_container.js","actions/image_actions.ts","util/image_util.ts","components/grid_list.jsx","components/album_crud/album.jsx","components/landing_page/landing_page.jsx","components/landing_page/landing_page_container.js","components/main/main_page.jsx","components/album_crud/album_container.js","components/app.js","components/root.jsx","reducers/session_api_reducer.ts","reducers/session_errors_reducer.ts","reducers/errors_reducer.ts","reducers/entities_reducer.ts","reducers/images_reducer.ts","reducers/albums_reducer.ts","reducers/util_reducer.ts","reducers/albums_util_reducer.ts","reducers/images_util_reducer.ts","reducers/root_reducer.ts","store/store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mapStateToProps","state","loggedIn","session","isAuthenticated","AuthRoute","withRouter","connect","Component","component","path","exact","render","props","to","ProtectedRoute","rest","RECEIVE_ALBUM","RECEIVE_ALL_ALBUMS","REMOVE_ALBUM","receiveAlbum","album","type","createAlbum","dispatch","axios","post","APIUtil","result","data","fetchAllAlbums","userId","get","albums","uploadCover","image","patch","results","setAuthToken","token","defaults","headers","common","RECEIVE_CURRENT_USER","RECEIVE_SESSION_ERRORS","RECEIVE_USER_LOGOUT","RECEIVE_USER_SIGN_IN","receiveErrors","errors","signup","user","userData","err","response","login","res","localStorage","setItem","decoded","jwt_decode","currentUser","catch","logout","removeItem","useStyles","makeStyles","theme","container","background","maxWidth","height","header","fontSize","marginTop","marginBottom","button","width","SessionForm","style","useRouteMatch","useState","username","setUsername","password","setPassword","handleInput","cb","e","currentTarget","value","Container","className","Typography","variant","onSubmit","formType","onChange","placeholder","Button","signedIn","isSignedIn","onClick","createMuiTheme","typography","fontFamily","padding","margin","display","grid","modal","flexDirection","NavBar","history","url","useHistory","handleOnClick","useCallback","push","useEffect","id","form","sessionModal","profileModale","openModal","setModal","openProfile","setProfile","ThemeProvider","Grid","direction","justify","alignContent","alignItems","space","item","sm","xs","spacing","ButtonGroup","size","disableElevation","textDecoration","Drawer","anchor","open","SlideProps","in","onClose","ownProps","RECEIVE_IMAGES","RECEIVE_UTIL_IMAGES","fetchUtilImages","images","uploadImages","receiveImages","root","flexWrap","justifyContent","overflow","backgroundColor","palette","paper","gridList","backgroundSize","ImageGridList","tileData","classes","setTiles","tile","widthAdj","img","GridList","cellHeight","cols","map","GridListTile","src","alt","title","AlbumGrid","index","AlbumDisplay","imagePath","cover_path","onClickCb","preventDefault","loading","onLoad","heightAdjust","widthAdjust","sizeAdjust","creating","crudAction","setCrud","private","setAlbum","cover","setCover","setImages","files","setFiles","textAlign","crudCb","multiple","reader","FileReader","file","onloadend","imageUrl","imageFile","readAsDataURL","fileReader","FormData","append","UploadCover","TextField","onInput","target","Checkbox","inputProps","newAlbum","public","ownerId","CreateAlbum","grabImages","newFiles","newImages","createImagePreview","gridReady","Image","author","i","length","upload","clearAlbum","UploadImages","Link","href","Render","crud","Item","Paper","LandingPage","items","loaded","setLoaded","publicImages","Object","values","entities","utils","MainPage","filter","ownerid","Album","App","CssBaseline","Albums","Root","store","initialState","_nullErrors","SessionErrorsReducer","action","freeze","combineReducers","assign","RootReducer","configureStore","preloadedState","createStore","applyMiddleware","thunk","logger","document","addEventListener","jwtToken","decodedUser","Date","now","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.30afb75b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\n\n// Passed in from parent component or from mapStateToProps\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route\n    path={path}\n    exact={exact}\n    render={(props) =>\n      !loggedIn ? (\n        <Component {...props} />\n      ) : (\n        // Redirect to the tweets page if the user is authenticated\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        // Redirect to the login page if the user is already authenticated\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\n\n// Use the isAuthenitcated slice of state to determine whether a user is logged in\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.session.isAuthenticated,\n});\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n","import * as APIUtil from \"../util/album_util\";\nimport { Middleware, Action } from \"redux\";\nimport {ThunkAction} from 'redux-thunk'\nimport {RootState} from '../reducers/root_reducer'\nimport { AxiosRequestConfig } from \"axios\";\n\nexport const RECEIVE_ALBUM = \"RECEIVE_ALBUM\"\nexport const RECEIVE_ALL_ALBUMS = \"RECEIVE_ALL_ALBUMS\"\nexport const REMOVE_ALBUM = \"REMOVE_ALBUM\"\n\nexport interface action {\n   type: \"RECEIVE_ALBUM\";\n   album: APIUtil.album;\n}\nexport interface indexAction {\n   type: \"RECEIVE_ALL_ALBUMS\";\n   albums: { [id: number]: APIUtil.album } // finally getting the hang of typescript\n}\nexport const receiveAlbum = (album: APIUtil.album): action => ({\n   type: RECEIVE_ALBUM,\n   album: album\n})\nexport const receiveAllAlbums = (albums: indexAction['albums']): indexAction => ({\n   type: RECEIVE_ALL_ALBUMS,\n   albums: albums\n})\nexport const removeUtilAlbum = (): {type: \"REMOVE_ALBUM\"} => ({\n   type: REMOVE_ALBUM\n})\nexport const createAlbum = (album: APIUtil.album) \n   :ThunkAction<void, RootState, unknown, Action<string>>  => (dispatch\n      : Middleware | any ) =>\n      APIUtil.createAlbum(album).then(\n         (result: {data: APIUtil.album}) => dispatch(receiveAlbum(result.data))\n  );\nexport const fetchAllAlbums = (userId: AxiosRequestConfig) \n   :ThunkAction<void, RootState, unknown, Action<string>>  => (dispatch\n      : Middleware | any ) =>\n      APIUtil.fetchAllAlbums(userId).then(\n         (result: {data: {[id: number]: APIUtil.album} }) => dispatch(receiveAllAlbums(result.data))\n  );\n\nexport const uploadCover = (image: FileReader)\n   :ThunkAction<void, RootState, unknown, Action<string>> => (dispatch\n      : Middleware | any) =>\n      APIUtil.uploadCover(image).then(\n         (results: {data: APIUtil.album}) => dispatch(receiveAlbum(results.data))\n      ) ","import axios, { AxiosRequestConfig } from 'axios'\nexport interface album {\n   id: number;\n   ownerid: number;\n   title: string;\n   public: boolean;\n}\nexport const createAlbum = (album: album): Promise<any> => (\n   axios.post(\"/api/albums\", album)\n)\nexport const uploadCover = (image: FileReader): Promise<any> => (\n   axios.patch(\"/api/albums/cover\", image)\n)\n\nexport const fetchAllAlbums = (userId: AxiosRequestConfig): Promise<any> => (\n   axios.get(\"/api/albums\", userId)\n)","import axios from \"axios\";\ninterface user{username:string, password:string}\nexport const setAuthToken = (token:boolean) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport const signup = (userData:user) => {\n  return axios.post(\"/api/users\", userData);\n};\n\nexport const login = (userData:user) => {\n  return axios.post(\"/api/users/login\", userData);\n};\n\n","import * as APIUtil from \"../util/session_api_util\";\nimport jwt_decode from \"jwt-decode\";\nimport { Middleware, Action } from \"redux\";\nimport {ThunkAction} from 'redux-thunk'\nimport {RootState} from '../reducers/root_reducer'\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\ninterface sessionAction {\n   type: string;\n   currentUser?: {\n      username: string;\n      id: number;\n      password?: string;\n   };\n   errors?: string[];\n}\n// We'll dispatch this when our user signs in\nexport const receiveCurrentUser = (\n   currentUser: {\n      username: string,\n      id: number\n   }): sessionAction => ({\n  type: RECEIVE_CURRENT_USER,\n  currentUser,\n});\n\n// This will be used to redirect the user to the login page upon signup\nexport const receiveUserSignIn = (): sessionAction=> ({\n  type: RECEIVE_USER_SIGN_IN,\n});\n\n// We dispatch this one to show authentisessioncation errors on the frontend\nexport const receiveErrors = (errors:string[]):sessionAction => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors,\n});\n\n// When our user is logged out, we will dispatch this action to set isAuthenticated to false\nexport const logoutUser = ():sessionAction => ({\n  type: RECEIVE_USER_LOGOUT,\n});\n\n// Upon signup, dispatch the approporiate action depending on which type of response we receieve from the backend\nexport const signup = (\n   user: {\n      username: string,\n      id: number,\n      password: string\n   }):ThunkAction<void, RootState, unknown, Action<string>>  => (dispatch: Middleware | any ) =>\n  APIUtil.signup(user).then(\n    () => dispatch(receiveUserSignIn()),\n    (err) => dispatch(receiveErrors(err.response.data))\n  );\n\n// Upon login, set the session token and dispatch the current user. Dispatch errors on failure.\nexport const login = (\n   user: {\n      username: string,\n      id: number,\n      password: string\n   }):ThunkAction<void, RootState, unknown, Action<string>>  => (dispatch) =>\n  APIUtil.login(user)\n    .then((res) => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      APIUtil.setAuthToken(token);\n      const decoded: {username: string,id: number} = jwt_decode(token);\n      dispatch(receiveCurrentUser(decoded));\n    })\n    .catch((err) => {\n      dispatch(receiveErrors(err.response.data));\n    });\n// Upon logout, reset session token and remove the current user.\nexport const logout = ():ThunkAction<void, RootState, unknown, Action<string | boolean>> => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  APIUtil.setAuthToken(false);\n  dispatch(logoutUser());\n};\n","import React, {useState}  from 'react';\nimport { \n   Link,\n   withRouter,\n   useRouteMatch,\n   useHistory\n} from \"react-router-dom\";\nimport {Container, makeStyles, Typography, Button, TextField} from '@material-ui/core'\nimport styleSheet from './session.css'\nexport const useStyles = makeStyles((theme) => ({\n   container: {\n      background: '#0077b6',\n      maxWidth: '500px',\n      height: \"inherit\"\n   },\n   header: {\n      fontSize: \"50px\",\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n   },\n   button: {\n      width: \"450px\",\n      height: \"50px\",\n      marginTop:\"20px\"\n   }\n}))\nfunction LoginForm(props){\n   let style = useStyles()\n   let { path }  = useRouteMatch()\n   const [username, setUsername] = useState('');\n   const [password, setPassword] = useState('');\n   const handleInput = (cb) => {\n      return (e) => {\n         cb(e.currentTarget.value)\n      }\n   }\n\n   // Render the session errors if there are any\n   // const renderErrors = () => {\n   //    return(\n   //          <ul>\n   //          {Object.keys(this.state.errors).map((error, i) => (\n   //             <li key={`error-${i}`}>\n   //                {this.state.errors[error]}\n   //             </li>\n   //          ))}\n   //          </ul>\n   //       );\n   // }\n\n   return (\n\n      <Container className={style.container} >\n      <Typography variant=\"h6\" className={style.header}>\n         {path === \"/login\" ? \n            \"Welcome Back\" : \n            \"Register\"\n         }\n      </Typography>\n      <form onSubmit={() => {\n         let user = {\n            username: username,\n            password: password\n         }\n         \n         props.formType(user).then(() => {\n            if( props.type === 'signup') { // spaghetti code since I forgot to get jwt passport to work on backend signup\n               props.login(user)\n            }\n         })\n         setPassword('')\n      }} style={{fontSize: \"8px\"}}>\n            <input type=\"text\"\n               value={username}\n               onChange={handleInput(setUsername)}\n               placeholder=\"Username\"\n               className=\"sessionInput\"\n            />\n         <br/>\n            <input type=\"password\"\n               className=\"sessionInput\"\n               value={password}\n               onChange={handleInput(setPassword)}\n               placeholder=\"Password\"\n            />\n         <br/>\n         <Link\n         className=\"session-links\"\n         to={path === \"/login\" ?\n         \"/signup\" : \n         \"/login\"}>\n            {path=== \"/login\" ? \n            \"Need an account?\" :\n            \"Already have an account?\"}\n         </Link>\n         <Button type='submit' className={style.button}>submit</Button>\n         {/* {renderErrors()} */}\n      </form>\n      </Container>\n   );\n  \n}\nexport const SessionForm = withRouter(LoginForm)","import { connect } from \"react-redux\";\nimport { login } from \"../../actions/session_actions\";\nimport {SessionForm} from \"./login_form\";\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.errors.session,\n    type: \"login\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    formType: (user) => dispatch(login(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionForm);\n","import { connect } from \"react-redux\";\nimport { login, signup } from \"../../actions/session_actions\";\nimport { SessionForm } from \"./login_form\";\n\nconst mapStateToProps = (state) => {\n  return {\n    signedIn: state.session.isSignedIn,\n    errors: state.errors.session,\n    type: \"signup\"\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    formType: (user) => dispatch(signup(user)),\n    login: (user) => dispatch(login(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SessionForm);\n","import {connect} from \"react-redux\"\nimport { logout} from '../../actions/session_actions'\nimport Profile from \"./profile\"\nconst mSTP = (state) => ({\n   user: state.session.user\n})\n\nconst mDTP = (dispatch) => ({\n   logout: () => dispatch(logout())\n})\n\nexport default connect(mSTP, mDTP)(Profile)","import React from 'react'\nimport {useStyles} from '../session/login_form'\nimport  { Container, Typography, Button} from '@material-ui/core'\nexport default  function Profile(props) {\n   const style = useStyles()\n   return(\n   <Container className={style.container} >\n         <Typography variant=\"h6\" className={style.header} style={{fontSize: \"40px\"}}>\n            { `Welcome Back ${props.user.username}!`}\n         </Typography>\n         <Button className={style.button} onClick={ props.logout }>Logout?</Button>\n   </Container>\n   )\n}","import React, {useState, useEffect, useCallback} from 'react';\nimport navStyle from \"./nav.css\";\nimport {  \n   Grid, \n   ButtonGroup, \n   Button, \n   createMuiTheme, \n   ThemeProvider, \n   makeStyles, \n   Drawer\n} from '@material-ui/core';\nimport LoginForm from '../session/login_form_container';\nimport SignUpForm from '../session/signup_form_container';\nimport Profile from '../profile/profile_container';\nimport {\n  Link,\n  useRouteMatch,\n  useHistory,\n} from \"react-router-dom\";\n\nconst theme = createMuiTheme({\n   typography: {\n      fontFamily: \"'Playfair Display', serif\",\n      button: {\n         fontSize: '25px',\n         height: \"30px\",\n         padding: \"10px\",\n         margin: \"0px\",\n      }\n   }\n})\nconst useStyles = makeStyles((theme)=>({\n   button: {\n      padding: 10,\n      margin: 0,\n      display:'flex',\n      \n   },\n   grid: {\n      height: 50\n   },\n   modal: {\n      display: \"flex\",\n      flexDirection: \"row-reverse\",\n\n   }\n}))\nfunction NavBar(props){\n   let style = useStyles()\n   let { path, url }  = useRouteMatch()\n   const history = useHistory();\n   const handleOnClick = useCallback(() => history.push('/'))\n   useEffect( () => {\n      let userId = props.user ? props.user.id : 0\n      props.fetchAllAlbums({userId: userId})\n   })\n   let sessionModal = (path === '/login' || path === \"/signup\")\n   let profileModale = (path === '/@me')\n   let form\n   function options () {\n      return !props.loggedIn ? \n       (<Grid container item xs={3} spacing={0} alignItems=\"center\" justify=\"center\">\n               <ButtonGroup variant=\"contained\" size=\"medium\" disableElevation >\n                  <Link to={`/login`} style={{textDecoration: \"none\"}}>\n                     <Button type=\"button\" className={style.button}>\n                        Log In\n                     </Button>\n                  </Link>\n                  <Link to={`/signup`} style={{textDecoration: \"none\"}}>\n                     <Button type=\"button\" className={style.button}>\n                        Sign Up\n                     </Button>\n                  </Link>\n               </ButtonGroup>\n               <Drawer\n                  anchor=\"right\"\n                  open={openModal}\n                  SlideProps={ {in: openModal, direction: \"right\"} }\n                  onClose={handleOnClick}\n                  className={style.modal}\n                  >\n                     {form}\n               </Drawer>\n            </Grid>) : \n            (\n               <Grid container item xs={4} spacing={1} alignItems=\"center\" justify=\"center\">\n                  <ButtonGroup variant=\"contained\" size=\"medium\" disableElevation >\n                  <Link to={`/@me/albums`} style={{textDecoration: \"none\"}}>\n                     <Button type=\"button\" className={style.button}>\n                        My Albums\n                     </Button>\n                  </Link>\n                  <Link to={`/signup`} style={{textDecoration: \"none\"}}>\n                     <Button type=\"button\" className={style.button}>\n                        Home\n                     </Button>\n                  </Link>\n                  <Link to={`/@me`} style={{textDecoration: \"none\"}}>\n                     <Button type=\"button\" className={style.button}>\n                        profile\n                     </Button>\n                  </Link>\n               </ButtonGroup>\n               <Drawer\n                  anchor=\"right\"\n                  open={openProfile}\n                  SlideProps={ {in: openProfile, direction: \"right\"} }\n                  onClose={handleOnClick}\n                  className={style.modal}\n                  >\n                     <Profile />\n               </Drawer>\n               </Grid>\n            )\n   }\n   if( path === '/login'){\n      form = <LoginForm />\n   } else {\n   form = <SignUpForm />\n   }\n   const [openModal,setModal] = useState(sessionModal)\n   const [openProfile, setProfile] = useState(profileModale)\n   useEffect(() => {\n      setModal(path === '/login' || path === \"/signup\")\n      setProfile(path === '/@me')\n   })\n   return (\n      <ThemeProvider theme={theme} key=\"\">\n         <div className=\"nav-bar\">\n         <Grid container direction='row' justify=\"space-between\" alignContent=\"center\" alignItems=\"center\" space={1} className={style.grid}>\n            <Grid container item sm={3}  alignItems=\"center\" justify=\"center\">\n                  <p style={{fontFamily: \"'Playfair Display', serif\", fontSize: \"30px\"}}>Photo Dojo</p>\n            </Grid>\n            \n         {options()}\n         </Grid>\n         </div>\n      </ThemeProvider>\n\n   );\n}\n\n\nexport default NavBar;\n\n\n","import { connect } from \"react-redux\";\nimport { fetchAllAlbums } from \"../../actions/album_actions\";\nimport { logout } from \"../../actions/session_actions\";\n\nimport NavBar from \"./navbar\";\n\nconst mapStateToProps = (state, ownProps) => {\n   return {loggedIn: state.session.isAuthenticated, user: state.session.user }\n};\nconst mapDispatchToProps = (dispatch) => ({\n   logout: () => dispatch(logout()),\n   fetchAllAlbums: (userId) => dispatch(fetchAllAlbums(userId))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","import * as APIUtil from \"../util/image_util\";\nimport { Middleware, Action } from \"redux\";\nimport {ThunkAction} from 'redux-thunk'\nimport {RootState} from '../reducers/root_reducer'\nexport const RECEIVE_IMAGES = \"RECEIVE_IMAGES\";\nexport const RECEIVE_UTIL_IMAGES = \"RECEIVE_UTIL_IMAGES\"\nexport interface images {\n   [id: number]: string\n}\nexport interface action {\n   type: \"RECEIVE_IMAGES\";\n   images?: images;\n}\nexport interface utilAction {\n   type: \"RECEIVE_UTIL_IMAGES\",\n   images: images[]\n}\nexport const receiveImages = (images:images): action => ({\n   type: RECEIVE_IMAGES,\n   images: images\n})\nexport const receiveUtilImages = (images: utilAction[\"images\"]): utilAction => ({\n   type: RECEIVE_UTIL_IMAGES,\n   images: images\n})\n\nexport const fetchUtilImages = () \n:ThunkAction<void, RootState, unknown, Action<string>>  => (dispatch\n      : Middleware | any ) => \n      APIUtil.fetchRecentImages()\n      .then(\n         (results: {data: images[]}) => dispatch(receiveUtilImages(results.data))\n      )\nexport const uploadImages = (images: FormData) \n   :ThunkAction<void, RootState, unknown, Action<string>>  => (dispatch\n      : Middleware | any ) =>\n      APIUtil.uploadImages(images).then(\n         (result: {data: images}) => dispatch(receiveImages(result.data))\n  );","import axios from 'axios'\n\nexport const uploadImages = (images: FormData): Promise<any> => (\n   axios.post(\"/api/images\", images)\n)\n\nexport const fetchRecentImages = (): Promise<any> => (\n   axios.get(\"/api/recentimages\")\n)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 1500,\n    height: \"auto\",\n      backgroundSize: \"contain\"\n  },\n}));\n\n/**\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *     cols: 2,\n *   }\n **/\nexport default function ImageGridList({tileData}) {\n   const classes = useStyles();\n   function setTiles(tile){\n      let widthAdj = tile.img.height  / tile.img.width \n      if(widthAdj < .75){\n         return 6\n      } else if (widthAdj < 1){\n         return 4\n      } else {\n         return 2\n      }\n   }\n   return (\n      <div className={classes.root}>\n         <GridList cellHeight={\"320\"} className={classes.gridList} cols={12}>\n         {tileData.map((tile) => (\n            <GridListTile key={tile.img.src} cols={setTiles(tile)}>\n               <img src={tile.img.src} alt={tile.title} \n                  />\n            </GridListTile>\n         ))}\n         </GridList>\n      </div>\n   );\n}","import React, {useState } from \"react\";\nimport {withRouter } from \"react-router-dom\"\nimport NavBar from '../nav/navbar_container'\nimport {Typography, Link, TextField, Checkbox, Button, makeStyles, GridList, GridListTile} from \"@material-ui/core\"\nimport GridListContainer from \"../grid_list\"\n\nconst useStyles = makeStyles((theme)=>({\n   button: {\n      padding: 10,\n      margin: 0,\n      width: '200px',\n      fontSize: \"20px\"\n      \n   },\n   grid: {\n      height: 50\n   },\n   modal: {\n      display: \"flex\",\n      flexDirection: \"row-reverse\",\n\n   },\n   root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n   },\n   gridList: {\n      width: 1500,\n      height: \"auto\",\n      backgroundSize: \"contain\"\n   },\n}))\n\nfunction Album(props) {\n   const style = useStyles()\n   let creating;\n   creating = !!props.creating.cover_path ? \"images\" : null \n   if( !props.creating.cover_path && !!props.creating.id) {\n      creating = \"uploadCover\"\n   }\n   const [crudAction, setCrud] = useState(creating);\n   const [album, setAlbum] = useState({ title: '', private: false });\n   const [cover, setCover] = useState(props.creating.cover_path);\n   const [images, setImages] = useState([])\n   const [files, setFiles] = useState([])\n   function crud(){\n      switch (crudAction) {\n         case \"uploadCover\":\n            return UploadCover(props, cover,setCover, setCrud, style)\n         case \"newAlbum\":\n            return CreateAlbum(props, album, setAlbum, setCrud)\n         case \"images\":\n            return UploadImages(props, images, setImages, setCrud, files, setFiles)\n         default:\n\n            return Render(props, setCrud, style)\n      }\n   }\n   return(\n      <div >\n         <NavBar />\n         <div style={{ textAlign: \"center\", marginTop: \"20px\"}}>\n           {crud()}\n         </div>\n      </div>\n   )\n}\n\nfunction Render(props, cb, style) {\n   return(\n               <Typography variant=\"h3\">\n            {\n               props.albums.length === 0 ? \n               (\"You haven't created any albums yet!\"\n               ) :\n               \"Your albums\"\n            }\n            <br/>\n            <div style={{fontSize: \"20px\"}}>\n               <Link href=\"#\" onClick={(e) => {\n                  e.preventDefault()\n                  cb('newAlbum')\n                  }}> Create New Album</Link>\n            </div>\n            {\n               props.albums.length > 0 ? \n                  AlbumGrid(props, style) :\n                  null\n            }\n         </Typography>\n   )\n}\n\nfunction AlbumGrid(props, style){\n   return (\n      <div className={style.root}>\n         <GridList cellHeight=\"320\" className={style.gridList} cols={12}>\n            {\n               props.albums.map( (album, index) =>(\n                  <GridListTile key={index} cols={3}>\n                     {AlbumDisplay({title: album.title, imagePath: album.cover_path})}\n                  </GridListTile>\n               ))   \n            }\n         </GridList>\n      </div>\n   )\n}\n\nfunction CreateAlbum(props, album, cb, crudCb){\n   return (\n      <div style={{margin: '20px'}}>\n         <Typography style={{margin: '20px'}}>\n            {\"Album Title\"}\n            <br/>\n            <TextField value={album.title} onInput={(e) => {\n               cb({title: e.target.value, private: album.private})\n            }}/>\n         </Typography>\n         <Typography style={{margin: '20px'}}>\n            Make Album Private?\n            <Checkbox\n               value=\"checkedA\"\n               inputProps={{ 'aria-label': 'Checkbox A' }}\n               onClick={() => {\n                  cb({title: album.title, private: !album.private})\n               }}\n               />\n         </Typography>\n         <Button \n            size=\"large\" \n\n            onClick={(e) => {\n            e.preventDefault()\n            if( album.title === \"\" ){\n               return null\n            }\n\n            const newAlbum = { title: album.title, public: !album.private, ownerId: props.user.id}\n            props.createAlbum(newAlbum)\n               .then(() => {\n                  crudCb('uploadCover')\n               })\n         }} >Create</Button>\n      </div>\n   )\n}\n\nfunction UploadCover(props, cover, cb, crudCb, style) {\n   return (<div style={{margin: '20px'}}>\n         <Typography style={{margin: '20px'}}>\n            {`Upload cover for ${props.creating.title}`}\n            <br/>\n         </Typography>\n            <input\n            type=\"file\"\n            value=\"\"\n            multiple\n            onChange={ (e) => {\n               const reader = new FileReader();\n               const file = e.currentTarget.files[0];\n               reader.onloadend = () => (\n                  cb({ image: {imageUrl: reader.result, imageFile: file}, file: file})\n                  )\n                  if (file) {\n                     reader.readAsDataURL(file);\n                  }\n               }}\n               />\n         <br/>\n         {\n            cover ?\n            (  \n               <div> \n                  <br />\n               {AlbumDisplay({imagePath: cover.image.imageUrl, title: props.creating.title})}\n               <br/>\n               <Button \n               className={style.button}\n               size=\"large\" \n               onClick={(e) => {\n                  e.preventDefault()\n                  const fileReader = new FormData()\n                  fileReader.append(\"albumId\", props.creating.id)\n                  fileReader.append(\"albums[photos][]\", cover.file)\n                  props.uploadCover(fileReader).then( () => {\n                  crudCb('images')\n                  cb(\"\")\n                  })\n               }}>Upload</Button>\n               </div>\n            ) : \n            null\n         }\n      </div>)\n}\n\nfunction UploadImages(props, images, cb, crudCb, files, setFiles){\n   function grabImages(file) {\n      let newFiles = files\n      newFiles.push(file)\n      setFiles([...newFiles])\n      const reader = new FileReader();\n      reader.onloadend = () => {\n         let newImages = images\n         newImages.push(reader.result)\n         cb([...newImages])\n      }\n      reader.readAsDataURL(file)\n   }\n\n   function createImagePreview(){\n      let gridReady = images.map( (imagePath, index) => {\n         let img = new Image();\n         img.src = imagePath\n         return { img: img, title: index, author: props.user.username }\n      })\n      return (\n         <div style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"column\"}}>\n            <br/>\n            <Button onClick={(e) => {\n               e.preventDefault();\n               const fileReader = new FormData();\n               fileReader.append(\"albumId\", props.creating.id);\n               for( let i = 0; i < files.length; i++ ){\n                  fileReader.append(\"albums[photos][]\", files[i])\n               }\n               props.upload(fileReader).then(() => {\n                  cb([]);\n                  setFiles([]);\n                  crudCb(\"\");\n                  props.clearAlbum()\n               })\n            }}\n            size=\"large\" \n            >Upload</Button>\n            <br/>\n            <GridListContainer tileData={gridReady}/>\n         </div>\n      )\n   }\n\n   return(  \n      <div style={{margin: '20px'}}>\n         <Typography style={{margin: '20px'}}>\n            {`Add images`}\n         <br/>\n         </Typography>\n            {AlbumDisplay({imagePath: props.creating.cover_path, title: props.creating.title})}\n            <input\n               type=\"file\"\n               onChange={ (e) => {\n                  const files = e.currentTarget.files;\n                  for( let i = 0; i < files.length; i++ ){\n                     let file = files[i];\n                     grabImages(file)\n                  }\n                  e.currentTarget.id = e.currentTarget.id === \"\" ?\n                     1 :\n                     e.currentTarget.id++\n               }}\n               multiple\n               />\n            {\n               images.length > 0 ?\n               createImagePreview() : \n               null\n            }\n      </div>\n   )\n\n   \n}\n\nexport function AlbumDisplay(props, onClickCb = (e) => { e.preventDefault() }) {\n   return(\n      <div>\n         <img \n         loading=\"lazy\"\n         src={props.imagePath} \n         onLoad={(e) => {\n            let width = e.currentTarget.width\n            let height = e.currentTarget.height\n            let heightAdjust = width < height ? 1 : height / width\n            let widthAdjust = width < height ? width / height : 1\n            let sizeAdjust = props.size ? props.size : 260\n            e.currentTarget.width = sizeAdjust * widthAdjust\n            e.currentTarget.height = sizeAdjust * heightAdjust\n         }}\n         onClick={onClickCb}/>\n         <Typography variant=\"h6\">\n            {\n            props.title ?\n            props.title : \n            null\n            }\n         </Typography>\n      </div>\n   )\n}\n\nexport default withRouter(Album)","import React, {useState, useEffect}  from \"react\"\nimport {Typography, Paper, Button} from \"@material-ui/core\"\nimport {AlbumDisplay} from \"../album_crud/album\"\nimport Carousel from 'react-material-ui-carousel'\nimport GridListContainer from \"../grid_list\"\nfunction Item(props)\n{\n    return (\n        <Paper height=\"400\">\n           <br />\n           <div style={{height: \"450px\"}} > \n            {AlbumDisplay(props)}\n           </div>\n            <Button className=\"CheckButton\">\n                Check it out!\n            </Button>\n        </Paper>\n    )\n}\nfunction LandingPage(props) {\n   let items = [];\n   const [loaded, setLoaded] = useState(false)\n   useEffect( () => {\n      if(!loaded){\n         props.fetchUtilImages()\n         setLoaded(true)\n      }\n   })\n   if( items.length === 0 && props.albums.length > 0 ) {\n      for( let i = props.albums.length - 1; i >= props.albums.length - 10; i-- ){\n         let album = { title: props.albums[i].title, imagePath: props.albums[i].cover_path }\n         items.push(album)\n      }\n   }\n   function createImagePreview(images){\n      let gridReady = images.map( (imagePath, index) => {\n         let img = new Image();\n         img.src = imagePath\n         return { img: img, title: index, author: props.user.username }\n      })\n      return (\n         <div style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"column\"}}>\n            <br/>\n            <GridListContainer tileData={gridReady}/>\n         </div>\n      )\n   }\n   return (\n      <div style={{ textAlign: \"center\", marginTop: \"10px\"}}>\n         <Typography variant=\"h3\">\n            Trending Albums\n         </Typography>\n         <br/>\n         <Carousel>\n               {\n                  items.map( (item, i) => (\n                     \n                        <Item key={i} {...item  } size=\"400\" /> \n\n                  ))\n               }\n         </Carousel>\n         { \n            loaded ? \n            createImagePreview(props.publicImages) :\n            null\n         }\n      </div>\n   )\n}\n\n\n\nexport default LandingPage","import { connect } from \"react-redux\";\nimport { fetchUtilImages } from \"../../actions/image_actions\";\n\nimport LandingPage from \"./landing_page\";\n\nconst mapStateToProps = (state) => {\n   return { \n      loggedIn: state.session.isAuthenticated, \n      user: state.session.user,\n      albums: Object.values(state.entities.albums),\n      publicImages: state.utils.images.map( image => image.path)\n   };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchUtilImages: () => dispatch(fetchUtilImages()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);\n","import React from \"react\";\nimport NavBarContainer from \"../nav/navbar_container\"\nimport LandingPage from \"../landing_page/landing_page_container\"\n\n\n\n\nfunction MainPage(props) {\n   return (\n      <div >\n         <NavBarContainer />\n         <LandingPage />\n      </div >\n    )\n}\n\nexport default MainPage;\n","import { connect } from \"react-redux\";\nimport Album from \"./album\"\nimport { uploadImages} from '../../actions/image_actions'\nimport { createAlbum, removeUtilAlbum, uploadCover } from '../../actions/album_actions'\nconst mSTP = (state) => ({\n   user: state.session.user,\n   albums: Object.values(state.entities.albums).filter(\n      (album) => {\n         return album.ownerid === state.session.user.id\n      }\n   ),\n   creating: state.utils.album\n})\n\nconst mDTP = (dispatch) => ({\n   upload: (images) => dispatch(uploadImages(images)),\n   createAlbum: (album) => dispatch(createAlbum(album)),\n   uploadCover: (image) => dispatch(uploadCover(image)),\n   clearAlbum: () => dispatch(removeUtilAlbum())\n\n})\n\nexport default connect(mSTP, mDTP)(Album)","import React from \"react\";\nimport { AuthRoute, ProtectedRoute } from \"../util/route_util\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core\"\nimport MainPage from \"./main/main_page\";\nimport Albums from './album_crud/album_container'\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"'Playfair Display', serif\",\n    button: {\n      fontSize: \"8px\",\n      height: \"14px\",\n      padding: \"0px\",\n      margin: \"0px\",\n    },\n  },\n});\nconst App = () => (\n  <div>\n    <CssBaseline>\n      <ThemeProvider theme={theme}>\n         <Switch>\n            <Route exact path=\"/\" component={MainPage} />\n            <AuthRoute exact path=\"/login\" component={MainPage} />\n            <AuthRoute exact path=\"/signup\" component={MainPage} />\n            <ProtectedRoute exact path=\"/@me\" component={MainPage} />\n            <ProtectedRoute exact path='/@me/albums' component={Albums} />\n         </Switch>\n      </ThemeProvider>\n    </CssBaseline>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter, useRouteMatch } from 'react-router-dom';\nimport App from './app';\n\nconst Root = ({ store }) => {\n   return(\n  <Provider store={ store }>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n)};\n\nexport default Root;","import {\n  RECEIVE_CURRENT_USER,\n  RECEIVE_USER_LOGOUT,\n  RECEIVE_USER_SIGN_IN,\n} from \"../actions/session_actions\";\ninterface user{\n   id: number;\n   username: string;\n}\ninterface initialState{\n   isAuthenticated: boolean;\n   user: user;\n}\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n};\n\nexport default function (state = initialState, action: {type: string, currentUser: user}) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser,\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: {},\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true,\n      };\n    default:\n      return state;\n  }\n}\n","\nimport {\n  RECEIVE_SESSION_ERRORS,\n  RECEIVE_CURRENT_USER,\n} from \"../actions/session_actions\";\n\nconst _nullErrors: string[] = [];\n\nconst SessionErrorsReducer = (state: string[] = _nullErrors, action: { type: string, errors: string[] } ) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return action.errors;\n    case RECEIVE_CURRENT_USER:\n      return _nullErrors;\n    default:\n      return state;\n  }\n};\n\nexport default SessionErrorsReducer;\n","// src/reducers/errors_reducer.js\n\nimport { combineReducers } from \"redux\";\n\nimport SessionErrorsReducer from \"./session_errors_reducer\";\n\nexport default combineReducers({\n  session: SessionErrorsReducer,\n});\n","import { combineReducers } from \"redux\";\nimport images from \"./images_reducer\"\nimport albums from \"./albums_reducer\"\n\nexport default  combineReducers({\n  images,\n  albums\n});","import {RECEIVE_IMAGES, images, action} from \"../actions/image_actions\";\n\nexport default function (\n   state: {} | images = {}, \n   action: action\n   ){\n      switch (action.type) {\n         case RECEIVE_IMAGES:\n            return {\n               ...state, \n               ...action.images\n            }\n         default:\n            return state\n      }\n}\n","import {RECEIVE_ALBUM, RECEIVE_ALL_ALBUMS, action, indexAction} from \"../actions/album_actions\";\nimport { album } from \"../util/album_util\";\nexport default function (\n   state: {} | {[id: number]: album} = {}, \n   action: action | indexAction\n   ){\n      switch (action.type) {\n         case RECEIVE_ALL_ALBUMS:\n            return action.albums\n         case RECEIVE_ALBUM:\n            let id = action.album.id\n            let newAlbum:{[id: number]: album}  = {[id]: action.album};\n            return Object.assign({}, state, newAlbum)\n         default:\n            return state\n      }\n}","import album from \"./albums_util_reducer\"\nimport images from \"./images_util_reducer\"\nimport { combineReducers } from \"redux\";\nexport default combineReducers({\n   album: album,\n   images: images\n})","import {REMOVE_ALBUM, RECEIVE_ALBUM, action} from '../actions/album_actions'\nimport { album } from '../util/album_util'\n\nexport default function (\n   state: {} | album = {}, \n   action: {type: \"REMOVE_ALBUM\"} | action\n   ){\n      switch (action.type) {\n         case RECEIVE_ALBUM:\n            return action.album\n         case REMOVE_ALBUM:\n            return {}\n         default:\n            return state\n      }\n}\n\n","import { images, RECEIVE_UTIL_IMAGES, utilAction } from \"../actions/image_actions\";\n\nexport default function(\n   state: [] | images[] = [],\n   action: utilAction\n){\n   switch (action.type) {\n      case RECEIVE_UTIL_IMAGES:\n         return action.images;\n      default:\n         return state\n   }\n}","import { combineReducers } from \"redux\";\nimport session from \"./session_api_reducer\";\nimport errors from \"./errors_reducer\"\nimport entities from \"./entities_reducer\"\nimport utils from \"./util_reducer\"\n\nexport const RootReducer = combineReducers({\n  session,\n  errors,\n  entities,\n  utils\n});\n\nexport type RootState = ReturnType<typeof RootReducer>\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport {RootReducer} from \"../reducers/root_reducer\";\n\nconst configureStore = (preloadedState = {}) =>\n  createStore(RootReducer, preloadedState, applyMiddleware(thunk, logger));\n\nexport default configureStore;","import React, { ReactElement } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\n// We will create this component shortly\nimport Root from \"./components/root\";\n\n// We set this up in the last section\nimport configureStore from \"./store/store\";\n\n// We will use this to parse the user's session token\nimport jwt_decode from \"jwt-decode\";\n\n// The session utility we just created\nimport { setAuthToken } from \"./util/session_api_util\";\n// We have not created this action yet, but will do so in the next step\nimport { logout } from './actions/session_actions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  // If a returning user has a session token stored in localStorage\n  if (localStorage.jwtToken) {\n\n    // Set the token as a common header for all axios requests\n    setAuthToken(localStorage.jwtToken);\n\n    // Decode the token to obtain the user's information\n    const decodedUser: { exp: number} = jwt_decode(localStorage.jwtToken);\n\n    // Create a preconfigured state we can immediately add to our store\n    const preloadedState:{ session: { isAuthenticated: boolean, user: {exp: number} }} = { session: { isAuthenticated: true, user: decodedUser } };\n\n    store = configureStore(preloadedState);\n\n    const currentTime = Date.now() / 1000;\n\n    // If the user's token has expired\n\n  } else {\n    // If this is a first time user, start with an empty store\n    store = configureStore({});\n  }\n  // Render our root component and pass in the store as a prop\n  const root = document.getElementById('root');\n//   let element: React.DOMElement<React.DOMAttributes<Element>, Element >\n//   element = \n  ReactDOM.render(<Root store={store} /> , root);\n});\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}